{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { BancoSql } from \"../core/db\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nvar state = {\n  products: [],\n  status: \"\",\n  items: []\n};\nvar db = BancoSql();\n\nfunction validation(params) {\n  var result, index;\n  return _regeneratorRuntime.async(function validation$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(list());\n\n        case 2:\n          result = _context.sent;\n          index = 0;\n\n        case 4:\n          if (!(index < (result == null ? void 0 : result.length))) {\n            _context.next = 17;\n            break;\n          }\n\n          if (!(result[index].id == params.id)) {\n            _context.next = 11;\n            break;\n          }\n\n          state.status = \"true\";\n          error(\"Produto ja esta no carinho\");\n          return _context.abrupt(\"return\", state.status);\n\n        case 11:\n          state.status = \"false\";\n          success(\"Produto add no carinho\");\n          return _context.abrupt(\"return\", state.status);\n\n        case 14:\n          index++;\n          _context.next = 4;\n          break;\n\n        case 17:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nexport function list() {\n  return _regeneratorRuntime.async(function list$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"car\"));\n\n        case 3:\n          state.products = _context2.sent;\n          return _context2.abrupt(\"return\", JSON.parse(state.products));\n\n        case 7:\n          _context2.prev = 7;\n          _context2.t0 = _context2[\"catch\"](0);\n\n        case 9:\n          return _context2.abrupt(\"return\", state.products);\n\n        case 10:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n}\nexport function update(params, stack, id) {\n  var result, add, index, jsonValue;\n  return _regeneratorRuntime.async(function update$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return _regeneratorRuntime.awrap(list());\n\n        case 2:\n          result = _context3.sent;\n          add = {\n            id: id,\n            name: params.children,\n            price: params.price,\n            image: params.image,\n            stock: parseInt(stack)\n          };\n\n          try {\n            state.products.push(add);\n          } catch (error) {\n            console.log(error);\n          }\n\n          index = 0;\n\n        case 6:\n          if (!(index < (result == null ? void 0 : result.length))) {\n            _context3.next = 19;\n            break;\n          }\n\n          if (!(result[index].id == id)) {\n            _context3.next = 13;\n            break;\n          }\n\n          jsonValue = JSON.stringify(add);\n          console.log(jsonValue);\n          return _context3.abrupt(\"return\", state.status);\n\n        case 13:\n          state.status = \"false\";\n          success(\"Produto add no carinho\");\n          return _context3.abrupt(\"return\", state.status);\n\n        case 16:\n          index++;\n          _context3.next = 6;\n          break;\n\n        case 19:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function add(params) {\n  var add, jsonValue;\n  return _regeneratorRuntime.async(function add$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          add = {\n            id: params.id,\n            name: params.name,\n            price: params.price,\n            image: params.image,\n            stock: 1\n          };\n\n          try {\n            state.products.push(add);\n          } catch (error) {\n            console.log(error);\n          }\n\n          if (!(params.id === null)) {\n            _context4.next = 4;\n            break;\n          }\n\n          return _context4.abrupt(\"return\", false);\n\n        case 4:\n          _context4.prev = 4;\n          jsonValue = JSON.stringify(state.products);\n          console.log(jsonValue);\n          _context4.next = 9;\n          return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"car\", jsonValue));\n\n        case 9:\n          _context4.next = 14;\n          break;\n\n        case 11:\n          _context4.prev = 11;\n          _context4.t0 = _context4[\"catch\"](4);\n          console.log(_context4.t0);\n\n        case 14:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, [[4, 11]], Promise);\n}\n\nfunction error(msg) {\n  console.log(msg);\n}\n\nfunction success(msg) {}","map":{"version":3,"sources":["/home/jc/projetos/cursos/node/reactnative/loja/src/service/index.tsx"],"names":["BancoSql","AsyncStorage","state","products","status","items","db","validation","params","list","result","index","length","id","error","success","getItem","JSON","parse","update","stack","add","name","children","price","image","stock","parseInt","push","console","log","jsonValue","stringify","setItem","msg"],"mappings":"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","sourcesContent":["import { Product } from \"../interfaces/product\";\nimport { BancoSql } from \"../core/db\";\nimport React, { useEffect, useState } from \"react\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nconst state: any = {\n  products: [],\n  status: \"\",\n  items: [],\n};\nconst db = BancoSql();\n\nasync function validation(params: Product) {\n  const result = await list();\n\n  for (let index = 0; index < result?.length; index++) {\n    if (result[index].id == params.id) {\n      state.status = \"true\";\n      error(\"Produto ja esta no carinho\");\n      return state.status;\n    } else {\n      state.status = \"false\";\n      success(\"Produto add no carinho\");\n      return state.status;\n    }\n  }\n}\n\nexport async function list() {\n  try {\n    state.products = await AsyncStorage.getItem(\"car\");\n    return JSON.parse(state.products);\n  } catch (e) {\n    // error reading value\n  }\n\n  return state.products;\n}\nexport async function update(params: any, stack: string, id: number) {\n  const result = await list();\n  let add = {\n    id: id,\n    name: params.children,\n    price: params.price,\n    image: params.image,\n    stock: parseInt(stack),\n  };\n\n  try {\n    state.products.push(add);\n  } catch (error) {\n    console.log(error);\n  }\n\n  for (let index = 0; index < result?.length; index++) {\n    if (result[index].id == id) {\n      const jsonValue = JSON.stringify(add);\n      console.log(jsonValue);\n\n      //  await AsyncStorage.setItem(\"car\", jsonValue);\n\n      return state.status;\n    } else {\n      state.status = \"false\";\n      success(\"Produto add no carinho\");\n      return state.status;\n    }\n  }\n}\n\nexport async function add(params: Product) {\n  //let validate: any = await validation(params);\n  //if (validate == \"true\") return;\n\n  let add = {\n    id: params.id,\n    name: params.name,\n    price: params.price,\n    image: params.image,\n    stock: 1,\n  };\n\n  try {\n    state.products.push(add);\n  } catch (error) {\n    console.log(error);\n  }\n\n  if (params.id === null) {\n    return false;\n  }\n\n  try {\n    const jsonValue = JSON.stringify(state.products);\n    console.log(jsonValue);\n    await AsyncStorage.setItem(\"car\", jsonValue);\n  } catch (e) {\n    console.log(e);\n  }\n}\nfunction error(msg: String) {\n  console.log(msg);\n}\nfunction success(msg: String) {}\n"]},"metadata":{},"sourceType":"module"}