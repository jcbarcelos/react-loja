{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { list } from \"../../service\";\nimport Cart from \"../../component/cart\";\nvar state = {\n  products: []\n};\nexport default function index() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      product = _useState2[0],\n      setProducts = _useState2[1];\n\n  var teste = [];\n\n  function handleLoad() {\n    return _regeneratorRuntime.async(function handleLoad$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.t0 = teste;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(list());\n\n          case 3:\n            _context.t1 = _context.sent;\n\n            _context.t0.push.call(_context.t0, _context.t1);\n\n            console.log(teste);\n            teste[0].map(function (e, index) {\n              return console.log(e);\n            });\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useEffect(function () {\n    handleLoad();\n  }, []);\n  return React.createElement(View, null, React.createElement(ScrollView, null, React.createElement(View, {\n    style: styles.viewScroll\n  }, teste[0].map(function (r) {\n    return React.createElement(Cart, {\n      key: r.id,\n      img: r.image,\n      text: \"\\\"R$ \" + r.price + \"\\\"\"\n    }, r.name);\n  }))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\"\n  },\n  viewScroll: {}\n});","map":{"version":3,"sources":["/home/jc/projetos/cursos/node/reactnative/loja/src/pages/cart/index.tsx"],"names":["React","useEffect","useState","list","Cart","state","products","index","product","setProducts","teste","handleLoad","push","console","log","map","e","styles","viewScroll","r","id","image","price","name","StyleSheet","create","container","flex","backgroundColor"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;AAGA,SAASC,IAAT;AACA,OAAOC,IAAP;AAEA,IAAMC,KAAU,GAAG;AACjBC,EAAAA,QAAQ,EAAE;AADO,CAAnB;AAGA,eAAe,SAASC,KAAT,GAAiB;AAC9B,kBAA+BL,QAAQ,CAAY,EAAZ,CAAvC;AAAA;AAAA,MAAOM,OAAP;AAAA,MAAgBC,WAAhB;;AACA,MAAIC,KAAU,GAAG,EAAjB;;AACA,WAAeC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA,0BACED,KADF;AAAA;AAAA,6CACoBP,IAAI,EADxB;;AAAA;AAAA;;AAAA,wBACQS,IADR;;AAGEC,YAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACAA,YAAAA,KAAK,CAAC,CAAD,CAAL,CAASK,GAAT,CAAa,UAACC,CAAD,EAAST,KAAT;AAAA,qBAA2BM,OAAO,CAACC,GAAR,CAAYE,CAAZ,CAA3B;AAAA,aAAb;;AAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMAf,EAAAA,SAAS,CAAC,YAAM;AACdU,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT;AAGA,SACE,oBAAC,IAAD,QACE,oBAAC,UAAD,QACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEM,MAAM,CAACC;AAApB,KACGR,KAAK,CAAC,CAAD,CAAL,CAASK,GAAT,CAAa,UAACI,CAAD;AAAA,WACZ,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,CAAC,CAACC,EAAb;AAAiB,MAAA,GAAG,EAAED,CAAC,CAACE,KAAxB;AAA+B,MAAA,IAAI,YAASF,CAAC,CAACG,KAAX;AAAnC,OACGH,CAAC,CAACI,IADL,CADY;AAAA,GAAb,CADH,CADF,CADF,CADF;AAaD;AAED,IAAMN,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE;AAFR,GADoB;AAK/BV,EAAAA,UAAU,EAAE;AALmB,CAAlB,CAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { View, Text, ScrollView, StyleSheet } from \"react-native\";\nimport { Product } from \"../../interfaces/product\";\nimport { list } from \"../../service\";\nimport Cart from \"../../component/cart\";\n\nconst state: any = {\n  products: [],\n};\nexport default function index() {\n  const [product, setProducts] = useState<Product[]>([]);\n  let teste: any = [];\n  async function handleLoad() {\n    teste.push( await list());\n\n    console.log(teste);\n    teste[0].map((e: any, index: number) => console.log(e));\n  }\n  useEffect(() => {\n    handleLoad();\n  }, []);\n  return (\n    <View>\n      <ScrollView>\n        <View style={styles.viewScroll}>\n          {teste[0].map((r: Product) => (\n            <Cart key={r.id} img={r.image} text={`\"R$ ${r.price}\"`}>\n              {r.name}\n            </Cart>\n          ))}\n        </View>\n      </ScrollView>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n  },\n  viewScroll: {},\n});\n"]},"metadata":{},"sourceType":"module"}