{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { list } from \"../../service\";\nimport Cart from \"../../component/cart\";\nexport default function index() {\n  var result;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      product = _useState2[0],\n      setProducts = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      total = _useState4[0],\n      setTotal = _useState4[1];\n\n  function handleLoad() {\n    var result;\n    return _regeneratorRuntime.async(function handleLoad$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(list());\n\n          case 2:\n            result = _context.sent;\n            console.log(result);\n            setProducts(result);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function handleTotal() {\n    var result, soma;\n    return _regeneratorRuntime.async(function handleTotal$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(list());\n\n          case 2:\n            result = _context2.sent;\n            soma = 0;\n            result.map(function (product) {\n              console.log(soma + product.price);\n            });\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useEffect(function () {\n    handleLoad();\n    handleTotal();\n  }, []);\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(ScrollView, null, React.createElement(View, {\n    style: styles.viewScroll\n  }, product == null ? void 0 : product.map(function (item) {\n    return React.createElement(Cart, {\n      key: item.id,\n      id: item.id,\n      image: item.image,\n      price: item.price,\n      stock: item.stock\n    }, item.name);\n  }))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\"\n  },\n  viewScroll: {}\n});","map":{"version":3,"sources":["/home/jc/projetos/cursos/node/reactnative/loja/src/pages/cart/index.tsx"],"names":["React","useEffect","useState","list","Cart","index","result","product","setProducts","total","setTotal","handleLoad","console","log","handleTotal","soma","map","price","styles","container","viewScroll","item","id","image","stock","name","StyleSheet","create","flex","backgroundColor"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;AAGA,SAASC,IAAT;AACA,OAAOC,IAAP;AAEA,eAAe,SAASC,KAAT,GAAiB;AAC9B,MAAIC,MAAJ;;AACA,kBAA+BJ,QAAQ,CAAY,EAAZ,CAAvC;AAAA;AAAA,MAAOK,OAAP;AAAA,MAAgBC,WAAhB;;AACA,mBAA0BN,QAAQ,EAAlC;AAAA;AAAA,MAAOO,KAAP;AAAA,MAAcC,QAAd;;AACA,WAAeC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACuBR,IAAI,EAD3B;;AAAA;AACQG,YAAAA,MADR;AAEEM,YAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;AAEAE,YAAAA,WAAW,CAACF,MAAD,CAAX;;AAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMA,WAAeQ,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACuBX,IAAI,EAD3B;;AAAA;AACQG,YAAAA,MADR;AAEMS,YAAAA,IAFN,GAEqB,CAFrB;AAGET,YAAAA,MAAM,CAACU,GAAP,CAAW,UAACT,OAAD,EAAkB;AAE3BK,cAAAA,OAAO,CAACC,GAAR,CAAYE,IAAI,GAAGR,OAAO,CAACU,KAA3B;AACD,aAHD;;AAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUAhB,EAAAA,SAAS,CAAC,YAAM;AACdU,IAAAA,UAAU;AACVG,IAAAA,WAAW;AACZ,GAHQ,EAGN,EAHM,CAAT;AAIA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEI,MAAM,CAACC;AAApB,KACE,oBAAC,UAAD,QACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE;AAApB,KACGb,OADH,oBACGA,OAAO,CAAES,GAAT,CAAa,UAACK,IAAD;AAAA,WACZ,oBAAC,IAAD;AACE,MAAA,GAAG,EAAEA,IAAI,CAACC,EADZ;AAEE,MAAA,EAAE,EAAED,IAAI,CAACC,EAFX;AAGE,MAAA,KAAK,EAAED,IAAI,CAACE,KAHd;AAIE,MAAA,KAAK,EAAEF,IAAI,CAACJ,KAJd;AAKE,MAAA,KAAK,EAAEI,IAAI,CAACG;AALd,OAOGH,IAAI,CAACI,IAPR,CADY;AAAA,GAAb,CADH,CADF,CADF,CADF;AAmBD;AAED,IAAMP,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAC/BR,EAAAA,SAAS,EAAE;AACTS,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE;AAFR,GADoB;AAK/BT,EAAAA,UAAU,EAAE;AALmB,CAAlB,CAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { View, Text, ScrollView, StyleSheet } from \"react-native\";\nimport { Product } from \"../../interfaces/product\";\nimport { list } from \"../../service\";\nimport Cart from \"../../component/cart\";\n\nexport default function index() {\n  let result: any;\n  const [product, setProducts] = useState<Product[]>([]);\n  const [total, setTotal] = useState();\n  async function handleLoad() {\n    const result = await list();\n    console.log(result);\n\n    setProducts(result);\n  }\n  async function handleTotal() {\n    const result = await list();\n    let soma: number = 0;\n    result.map((product: any) => {\n      // soma = parseFloat(soma + product.price);\n      console.log(soma + product.price);\n    });\n\n    // setTotal(0);\n  }\n  useEffect(() => {\n    handleLoad();\n    handleTotal();\n  }, []);\n  return (\n    <View style={styles.container}>\n      <ScrollView>\n        <View style={styles.viewScroll}>\n          {product?.map((item: Product) => (\n            <Cart\n              key={item.id}\n              id={item.id}\n              image={item.image}\n              price={item.price}\n              stock={item.stock}\n            >\n              {item.name}\n            </Cart>\n          ))}\n        </View>\n      </ScrollView>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n  },\n  viewScroll: {},\n});\n"]},"metadata":{},"sourceType":"module"}