{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { BancoSql } from \"../core/db\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nvar state = {\n  products: [],\n  status: \"\"\n};\nvar db = BancoSql();\n\nfunction validation(params) {\n  var teste;\n  return _regeneratorRuntime.async(function validation$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          teste = [];\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(list().then(function (result) {\n            for (var index = 0; index < result.length; index++) {\n              if (result[index].id == params.id) {\n                state.status = \"true\";\n              }\n\n              return state.status;\n            }\n          }));\n\n        case 3:\n          return _context.abrupt(\"return\", state.status);\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nvar showToast = function showToast() {\n  ToastAndroid.show(\"A pikachu appeared nearby !\", ToastAndroid.SHORT);\n};\n\nexport function list() {\n  return _regeneratorRuntime.async(function list$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(db.transaction(function (tx) {\n            tx.executeSql(\"select * from car\", [], function (_, _ref) {\n              var rows = _ref.rows;\n              return state.products = rows;\n            });\n          }));\n\n        case 2:\n          console.log(state.products);\n          return _context2.abrupt(\"return\", state.products);\n\n        case 4:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function update(params) {\n  return _regeneratorRuntime.async(function update$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return _regeneratorRuntime.awrap(db.transaction(function (tx) {\n            tx.executeSql(\"update car set name = ?, \" + \" name = ?, image = ?, price = ?,stock = ?,createdAt = ?\" + \" where id = ?;\", [params.name.toString(), params.image.toString(), params.price, params.stock, params.createdAt.toString(), params.id]);\n          }));\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function add(params) {\n  var validate, add;\n  return _regeneratorRuntime.async(function add$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return _regeneratorRuntime.awrap(validation(params));\n\n        case 2:\n          validate = _context4.sent;\n          console.log(validate);\n\n          if (validate == \"true\") {\n            console.log(\"Produto ja esta no carinho\");\n            showToast();\n            Alert.alert(\"Alert Title\", \"Produto ja esta no carinho\", [{\n              text: \"Cancel\",\n              onPress: function onPress() {\n                return console.log(\"Cancel Pressed\");\n              },\n              style: \"cancel\"\n            }, {\n              text: \"OK\",\n              onPress: function onPress() {\n                return console.log(\"OK Pressed\");\n              }\n            }]);\n          }\n\n          add = {\n            id: params.id,\n            name: params.name,\n            price: params.price,\n            image: params.image,\n            stock: 1\n          };\n\n          if (!(params.id === null)) {\n            _context4.next = 8;\n            break;\n          }\n\n          return _context4.abrupt(\"return\", false);\n\n        case 8:\n          _context4.next = 10;\n          return _regeneratorRuntime.awrap(db.transaction(function (tx) {\n            tx.executeSql(\"insert into car (id, name,image, price,stock,createdAt) values (?,?,?,?,?,?)\", [params.id, params.name.toString(), params.image.toString(), params.price, params.stock, params.createdAt.toString()]);\n          }));\n\n        case 10:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"sources":["/home/jc/projetos/cursos/node/reactnative/loja/src/service/index.tsx"],"names":["BancoSql","state","products","status","db","validation","params","teste","list","then","result","index","length","id","showToast","ToastAndroid","show","SHORT","transaction","tx","executeSql","_","rows","console","log","update","name","toString","image","price","stock","createdAt","add","validate","Alert","alert","text","onPress","style"],"mappings":"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","sourcesContent":["import { Product } from \"../interfaces/product\";\nimport { BancoSql } from \"../core/db\";\nimport React, { useState } from \"react\";\nimport { Alert, ToastAndroid } from \"react-native\";\nconst state: any = {\n  products: [],\n  status: \"\",\n};\nconst db = BancoSql();\n\nasync function validation(params: Product) {\n  let teste: any = [];\n  //   await db.transaction((tx) => {\n  //     tx.executeSql(\"delete from car\");\n  //   });\n\n  await list().then((result: any) => {\n    for (let index = 0; index < result.length; index++) {\n      if (result[index].id == params.id) {\n        state.status = \"true\";\n      }\n      return state.status;\n    }\n  });\n  return state.status;\n}\nconst showToast = () => {\n  ToastAndroid.show(\"A pikachu appeared nearby !\", ToastAndroid.SHORT);\n};\n\nexport async function list() {\n  await db.transaction((tx) => {\n    tx.executeSql(\n      \"select * from car\",\n      [],\n      (_, { rows }) => (state.products = rows)\n    );\n  });\n  console.log(state.products);\n\n  return state.products;\n}\nexport async function update(params: Product) {\n  await db.transaction((tx) => {\n    tx.executeSql(\n      \"update car set name = ?, \" +\n        \" name = ?, image = ?, price = ?,stock = ?,createdAt = ?\" +\n        \" where id = ?;\",\n      [\n        params.name.toString(),\n        params.image.toString(),\n        params.price,\n        params.stock,\n        params.createdAt.toString(),\n        params.id,\n      ]\n    );\n  });\n}\n\nexport async function add(params: Product) {\n  let validate: any = await validation(params);\n  console.log(validate);\n  if (validate == \"true\") {\n    console.log(\"Produto ja esta no carinho\");\n    showToast();\n    Alert.alert(\"Alert Title\", \"Produto ja esta no carinho\", [\n      {\n        text: \"Cancel\",\n        onPress: () => console.log(\"Cancel Pressed\"),\n        style: \"cancel\",\n      },\n      { text: \"OK\", onPress: () => console.log(\"OK Pressed\") },\n    ]);\n  }\n  const add = {\n    id: params.id,\n    name: params.name,\n    price: params.price,\n    image: params.image,\n    stock: 1,\n  };\n  if (params.id === null) {\n    return false;\n  }\n  await db.transaction((tx) => {\n    tx.executeSql(\n      \"insert into car (id, name,image, price,stock,createdAt) values (?,?,?,?,?,?)\",\n      [\n        params.id,\n        params.name.toString(),\n        params.image.toString(),\n        params.price,\n        params.stock,\n        params.createdAt.toString(),\n      ]\n    );\n  });\n}\n"]},"metadata":{},"sourceType":"module"}