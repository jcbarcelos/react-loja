{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nvar state = {\n  products: [],\n  status: \"\",\n  items: []\n};\n\nfunction validation(params) {\n  var result, index;\n  return _regeneratorRuntime.async(function validation$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(list());\n\n        case 2:\n          result = _context.sent;\n          console.log(result);\n          index = 0;\n\n        case 5:\n          if (!(index < (result == null ? void 0 : result.length))) {\n            _context.next = 18;\n            break;\n          }\n\n          if (!(result[index].id == params.id)) {\n            _context.next = 12;\n            break;\n          }\n\n          state.status = \"true\";\n          error(\"Produto ja esta no carinho\");\n          return _context.abrupt(\"return\", state.status);\n\n        case 12:\n          state.status = \"false\";\n          success(\"Produto add no carinho\");\n          return _context.abrupt(\"return\", state.status);\n\n        case 15:\n          index++;\n          _context.next = 5;\n          break;\n\n        case 18:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nexport function list() {\n  return _regeneratorRuntime.async(function list$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"car\"));\n\n        case 3:\n          state.products = _context2.sent;\n          return _context2.abrupt(\"return\", JSON.parse(state.products));\n\n        case 7:\n          _context2.prev = 7;\n          _context2.t0 = _context2[\"catch\"](0);\n\n        case 9:\n          return _context2.abrupt(\"return\", state.products);\n\n        case 10:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n}\nexport function update(params, stack, id) {\n  var add, result, product, filterProd, jsonValue;\n  return _regeneratorRuntime.async(function update$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          add = {\n            id: id,\n            name: params.children,\n            price: params.price,\n            image: params.image,\n            stock: parseInt(stack)\n          };\n          _context3.next = 3;\n          return _regeneratorRuntime.awrap(list());\n\n        case 3:\n          result = _context3.sent;\n          result == null ? product = [] : product = result;\n          _context3.prev = 5;\n          filterProd = product.filter(function (item) {\n            return item.id !== id;\n          });\n          filterProd.push(add);\n          jsonValue = JSON.stringify(filterProd);\n          _context3.next = 11;\n          return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"car\", jsonValue));\n\n        case 11:\n          return _context3.abrupt(\"return\", state.status);\n\n        case 14:\n          _context3.prev = 14;\n          _context3.t0 = _context3[\"catch\"](5);\n          console.error(_context3.t0);\n\n        case 17:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[5, 14]], Promise);\n}\nexport function add(params) {\n  var validate, result, product, add, jsonValue;\n  return _regeneratorRuntime.async(function add$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return _regeneratorRuntime.awrap(validation(params));\n\n        case 2:\n          validate = _context4.sent;\n\n          if (!(validate == \"true\")) {\n            _context4.next = 5;\n            break;\n          }\n\n          return _context4.abrupt(\"return\");\n\n        case 5:\n          _context4.next = 7;\n          return _regeneratorRuntime.awrap(list());\n\n        case 7:\n          result = _context4.sent;\n          result == null ? product = [] : product = result;\n          add = {\n            id: params.id,\n            name: params.name,\n            price: params.price,\n            image: params.image,\n            stock: 1\n          };\n          product.splice(0, 0, add);\n\n          try {} catch (error) {\n            console.log(error);\n          }\n\n          if (!(params.id === null)) {\n            _context4.next = 14;\n            break;\n          }\n\n          return _context4.abrupt(\"return\", false);\n\n        case 14:\n          _context4.prev = 14;\n          jsonValue = JSON.stringify(product);\n          _context4.next = 18;\n          return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"car\", jsonValue));\n\n        case 18:\n          _context4.next = 23;\n          break;\n\n        case 20:\n          _context4.prev = 20;\n          _context4.t0 = _context4[\"catch\"](14);\n          console.log(_context4.t0);\n\n        case 23:\n          list();\n\n        case 24:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, [[14, 20]], Promise);\n}\n\nfunction error(msg) {\n  console.log(msg);\n}\n\nfunction success(msg) {}","map":{"version":3,"sources":["/home/jc/projetos/cursos/node/reactnative/loja/src/service/index.tsx"],"names":["AsyncStorage","state","products","status","items","validation","params","list","result","console","log","index","length","id","error","success","getItem","JSON","parse","update","stack","add","name","children","price","image","stock","parseInt","product","filterProd","filter","item","push","jsonValue","stringify","setItem","validate","splice","msg"],"mappings":"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","sourcesContent":["import { Product } from \"../interfaces/product\";\n\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nconst state: any = {\n  products: [],\n  status: \"\",\n  items: [],\n};\n\nasync function validation(params: Product) {\n  const result = await list();\n  console.log(result);\n\n  for (let index = 0; index < result?.length; index++) {\n    if (result[index].id == params.id) {\n      state.status = \"true\";\n      error(\"Produto ja esta no carinho\");\n      return state.status;\n    } else {\n      state.status = \"false\";\n      success(\"Produto add no carinho\");\n      return state.status;\n    }\n  }\n}\n\nexport async function list() {\n  try {\n    state.products = await AsyncStorage.getItem(\"car\");\n    return JSON.parse(state.products);\n  } catch (e) {\n    // error reading value\n  }\n\n  return state.products;\n}\nexport async function update(params: any, stack: string, id: number) {\n  let add = {\n    id: id,\n    name: params.children,\n    price: params.price,\n    image: params.image,\n    stock: parseInt(stack),\n  };\n  const result = await list();\n  let product: any;\n  result == null ? (product = []) : (product = result);\n  try {\n    let filterProd = product.filter((item: any) => item.id !== id);\n\n    filterProd.push(add);\n    const jsonValue = JSON.stringify(filterProd);\n    await AsyncStorage.setItem(\"car\", jsonValue);\n    return state.status;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function add(params: Product) {\n  let validate: any = await validation(params);\n  if (validate == \"true\") return;\n  const result = await list();\n  let product: any;\n  result == null ? (product = []) : (product = result);\n  let add = {\n    id: params.id,\n    name: params.name,\n    price: params.price,\n    image: params.image,\n    stock: 1,\n  };\n  product.splice(0, 0, add);\n  try {\n  } catch (error) {\n    console.log(error);\n  }\n\n  if (params.id === null) {\n    return false;\n  }\n\n  try {\n    const jsonValue = JSON.stringify(product);\n    await AsyncStorage.setItem(\"car\", jsonValue);\n  } catch (e) {\n    console.log(e);\n  }\n  list();\n}\nfunction error(msg: String) {\n  console.log(msg);\n}\nfunction success(msg: String) {}\n"]},"metadata":{},"sourceType":"module"}