{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nexport default function Index(props) {\n  var _props$route$params$i = props.route.params.item,\n      name = _props$route$params$i.name,\n      id = _props$route$params$i.id,\n      image = _props$route$params$i.image,\n      price = _props$route$params$i.price,\n      stock = _props$route$params$i.stock;\n  var state = {\n    products: []\n  };\n\n  function handleCar(params) {\n    var pord, add;\n    return _regeneratorRuntime.async(function handleCar$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            pord = _toConsumableArray(state.products);\n            add = {\n              id: params.id,\n              name: params.name,\n              price: params.price,\n              image: params.image,\n              stock: 1\n            };\n            pord.push(add);\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"car\", JSON.stringify(pord)));\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function handleLoad() {\n    var result;\n    return _regeneratorRuntime.async(function handleLoad$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"car\"));\n\n          case 2:\n            result = _context2.sent;\n            console.log(JSON.parse(result));\n            setProducts(JSON.parse(result));\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useEffect(function () {\n    props.navigation.setOptions({\n      headerTitle: name\n    });\n    handleLoad();\n  }, []);\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(View, {\n    style: {\n      flex: 2\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: image\n    },\n    style: styles.image,\n    resizeMode: \"cover\"\n  })), React.createElement(View, {\n    style: {\n      flex: 2,\n      justifyContent: \"center\"\n    }\n  }, React.createElement(View, null, React.createElement(Text, {\n    style: styles.price\n  }, \"R$ \" + price)), React.createElement(View, null, React.createElement(Text, {\n    style: styles.name\n  }, name)), React.createElement(View, null, React.createElement(Text, {\n    style: styles.stock\n  }, \"Quantidade: \", stock))), React.createElement(View, {\n    style: {\n      flex: 1,\n      flexDirection: \"column-reverse\"\n    }\n  }, React.createElement(Button, {\n    style: styles.buttons,\n    onPress: function onPress() {\n      return handleCar(props.route.params.item);\n    },\n    title: \"Adicionar\"\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: \"column\",\n    width: \"100%\",\n    backgroundColor: \"#fff\"\n  },\n  image: {\n    width: \"100%\",\n    height: 300,\n    paddingTop: 50\n  },\n  price: {\n    fontSize: 24,\n    marginHorizontal: \"1%\"\n  },\n  name: {\n    fontFamily: \"Anton_400Regular\",\n    fontSize: 20,\n    marginHorizontal: \"1%\",\n    opacity: 0.4\n  },\n  stock: {\n    fontFamily: \"Anton_400Regular\",\n    fontSize: 15,\n    paddingHorizontal: \"1%\",\n    opacity: 0.4\n  },\n  butons: {\n    height: \"40px\",\n    alignSelf: \"center\"\n  }\n});","map":{"version":3,"sources":["/home/jc/projetos/cursos/node/reactnative/loja/src/pages/detail/index.tsx"],"names":["React","useEffect","AsyncStorage","Index","props","route","params","item","name","id","image","price","stock","state","products","handleCar","pord","add","push","setItem","JSON","stringify","handleLoad","getItem","result","console","log","parse","setProducts","navigation","setOptions","headerTitle","styles","container","flex","uri","justifyContent","flexDirection","buttons","StyleSheet","create","width","backgroundColor","height","paddingTop","fontSize","marginHorizontal","fontFamily","opacity","paddingHorizontal","butons","alignSelf"],"mappings":";;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAA2C,OAA3C;;;;;;AASA,OAAOC,YAAP,MAAyB,2CAAzB;AAGA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAA2B;AACxC,8BAA0CA,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBC,IAA7D;AAAA,MAAQC,IAAR,yBAAQA,IAAR;AAAA,MAAcC,EAAd,yBAAcA,EAAd;AAAA,MAAkBC,KAAlB,yBAAkBA,KAAlB;AAAA,MAAyBC,KAAzB,yBAAyBA,KAAzB;AAAA,MAAgCC,KAAhC,yBAAgCA,KAAhC;AACA,MAAMC,KAAK,GAAG;AACZC,IAAAA,QAAQ,EAAE;AADE,GAAd;;AAIA,WAAeC,SAAf,CAAyBT,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AACQU,YAAAA,IADR,sBACwBH,KAAK,CAACC,QAD9B;AAEQG,YAAAA,GAFR,GAEc;AACVR,cAAAA,EAAE,EAAEH,MAAM,CAACG,EADD;AAEVD,cAAAA,IAAI,EAAEF,MAAM,CAACE,IAFH;AAGVG,cAAAA,KAAK,EAAEL,MAAM,CAACK,KAHJ;AAIVD,cAAAA,KAAK,EAAEJ,MAAM,CAACI,KAJJ;AAKVE,cAAAA,KAAK,EAAE;AALG,aAFd;AASEI,YAAAA,IAAI,CAACE,IAAL,CAAUD,GAAV;AATF;AAAA,6CAWQf,YAAY,CAACiB,OAAb,CAAqB,KAArB,EAA4BC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAA5B,CAXR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAcA,WAAeM,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAC4BpB,YAAY,CAACqB,OAAb,CAAqB,KAArB,CAD5B;;AAAA;AACQC,YAAAA,MADR;AAEEC,YAAAA,OAAO,CAACC,GAAR,CAAYN,IAAI,CAACO,KAAL,CAAWH,MAAX,CAAZ;AACAI,YAAAA,WAAW,CAACR,IAAI,CAACO,KAAL,CAAWH,MAAX,CAAD,CAAX;;AAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKAvB,EAAAA,SAAS,CAAC,YAAM;AACdG,IAAAA,KAAK,CAACyB,UAAN,CAAiBC,UAAjB,CAA4B;AAC1BC,MAAAA,WAAW,EAAEvB;AADa,KAA5B;AAGAc,IAAAA,UAAU;AACX,GALQ,EAKN,EALM,CAAT;AAOA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEU,MAAM,CAACC;AAApB,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAE;AAAR;AAAb,KACE,oBAAC,KAAD;AACE,IAAA,MAAM,EAAE;AAAEC,MAAAA,GAAG,EAAEzB;AAAP,KADV;AAEE,IAAA,KAAK,EAAEsB,MAAM,CAACtB,KAFhB;AAGE,IAAA,UAAU,EAAC;AAHb,IADF,CADF,EAQE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEwB,MAAAA,IAAI,EAAE,CAAR;AAAWE,MAAAA,cAAc,EAAE;AAA3B;AAAb,KACE,oBAAC,IAAD,QACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,MAAM,CAACrB;AAApB,aAAkCA,KAAlC,CADF,CADF,EAIE,oBAAC,IAAD,QACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEqB,MAAM,CAACxB;AAApB,KAA2BA,IAA3B,CADF,CAJF,EAOE,oBAAC,IAAD,QACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEwB,MAAM,CAACpB;AAApB,qBAAwCA,KAAxC,CADF,CAPF,CARF,EAmBE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEsB,MAAAA,IAAI,EAAE,CAAR;AAAWG,MAAAA,aAAa,EAAE;AAA1B;AAAb,KACE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAEL,MAAM,CAACM,OADhB;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMvB,SAAS,CAACX,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBC,IAApB,CAAf;AAAA,KAFX;AAGE,IAAA,KAAK,EAAC;AAHR,IADF,CAnBF,CADF;AA6BD;AAED,IAAMyB,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC/BP,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETG,IAAAA,aAAa,EAAE,QAFN;AAGTI,IAAAA,KAAK,EAAE,MAHE;AAITC,IAAAA,eAAe,EAAE;AAJR,GADoB;AAO/BhC,EAAAA,KAAK,EAAE;AACL+B,IAAAA,KAAK,EAAE,MADF;AAELE,IAAAA,MAAM,EAAE,GAFH;AAGLC,IAAAA,UAAU,EAAE;AAHP,GAPwB;AAY/BjC,EAAAA,KAAK,EAAE;AACLkC,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,gBAAgB,EAAE;AAFb,GAZwB;AAgB/BtC,EAAAA,IAAI,EAAE;AACJuC,IAAAA,UAAU,EAAE,kBADR;AAEJF,IAAAA,QAAQ,EAAE,EAFN;AAGJC,IAAAA,gBAAgB,EAAE,IAHd;AAIJE,IAAAA,OAAO,EAAE;AAJL,GAhByB;AAsB/BpC,EAAAA,KAAK,EAAE;AACLmC,IAAAA,UAAU,EAAE,kBADP;AAELF,IAAAA,QAAQ,EAAE,EAFL;AAGLI,IAAAA,iBAAiB,EAAE,IAHd;AAILD,IAAAA,OAAO,EAAE;AAJJ,GAtBwB;AA4B/BE,EAAAA,MAAM,EAAE;AACNP,IAAAA,MAAM,EAAE,MADF;AAENQ,IAAAA,SAAS,EAAE;AAFL;AA5BuB,CAAlB,CAAf","sourcesContent":["import { useRoute } from \"@react-navigation/native\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  Text,\n  StyleSheet,\n  View,\n  ScrollView,\n  Image,\n  Button,\n} from \"react-native\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { Product } from \"../../interfaces/product\";\n\nexport default function Index(props: any) {\n  const { name, id, image, price, stock } = props.route.params.item;\n  const state = {\n    products: [],\n  };\n\n  async function handleCar(params: Product) {\n    const pord: any = [...state.products];\n    const add = {\n      id: params.id,\n      name: params.name,\n      price: params.price,\n      image: params.image,\n      stock: 1,\n    };\n    pord.push(add);\n\n    await AsyncStorage.setItem(\"car\", JSON.stringify(pord));\n  }\n\n  async function handleLoad() {\n    const result: any = await AsyncStorage.getItem(\"car\");\n    console.log(JSON.parse(result));\n    setProducts(JSON.parse(result));\n  }\n  useEffect(() => {\n    props.navigation.setOptions({\n      headerTitle: name,\n    });\n    handleLoad();\n  }, []);\n\n  return (\n    <View style={styles.container}>\n      <View style={{ flex: 2 }}>\n        <Image\n          source={{ uri: image }}\n          style={styles.image}\n          resizeMode=\"cover\"\n        />\n      </View>\n      <View style={{ flex: 2, justifyContent: \"center\" }}>\n        <View>\n          <Text style={styles.price}>{`R$ ${price}`}</Text>\n        </View>\n        <View>\n          <Text style={styles.name}>{name}</Text>\n        </View>\n        <View>\n          <Text style={styles.stock}>Quantidade: {stock}</Text>\n        </View>\n      </View>\n      <View style={{ flex: 1, flexDirection: \"column-reverse\" }}>\n        <Button\n          style={styles.buttons}\n          onPress={() => handleCar(props.route.params.item)}\n          title=\"Adicionar\"\n        />\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: \"column\",\n    width: \"100%\",\n    backgroundColor: \"#fff\",\n  },\n  image: {\n    width: \"100%\",\n    height: 300,\n    paddingTop: 50,\n  },\n  price: {\n    fontSize: 24,\n    marginHorizontal: \"1%\",\n  },\n  name: {\n    fontFamily: \"Anton_400Regular\",\n    fontSize: 20,\n    marginHorizontal: \"1%\",\n    opacity: 0.4,\n  },\n  stock: {\n    fontFamily: \"Anton_400Regular\",\n    fontSize: 15,\n    paddingHorizontal: \"1%\",\n    opacity: 0.4,\n  },\n  butons: {\n    height: \"40px\",\n    alignSelf: \"center\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}